{"version":3,"sources":["logo.svg","ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","onClick","deleteItem","icon","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","filteredItems","filter","console","log","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAAe,I,kCCgCAA,MA3Bf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAExB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KACzCC,SAAU,SAACC,GACPZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QAG5C,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,QAAS,WAC1Cf,EAAMgB,WAAWZ,EAAKI,MACvBS,KAAK,gBAVcb,EAAKI,QAe3C,OAAO,8BACC,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACKlB,O,eCnBjBmB,IAAQC,IAAIC,K,IAqFGC,E,kDAnFX,WAAYvB,GAAQ,IAAD,8BACf,cAAMA,IACDwB,MAAQ,CACTtB,MAAO,GACPuB,YAAa,CACTf,KAAM,GACNF,IAAK,KAGb,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKX,WAAa,EAAKA,WAAWW,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZF,E,+CAcnB,SAAYf,GACRiB,KAAKC,SAAS,CACVL,YAAa,CACTf,KAAME,EAAEE,OAAOL,MACfD,IAAIuB,KAAKC,W,qBAKrB,SAAQpB,GACJA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GAAqB,KAAjBS,EAAQxB,KAAa,CACrB,IAAMR,EAAK,sBAAO2B,KAAKL,MAAMtB,OAAlB,CAAyBgC,IACpCL,KAAKC,SAAS,CACV5B,MAAOA,EACPuB,YAAa,CACTf,KAAK,GACLF,IAAI,S,wBAMpB,SAAWA,GACP,IAAM2B,EAAgBN,KAAKL,MAAMtB,MAAMkC,QAAO,SAAAhC,GAAI,OAC9CA,EAAKI,MAAQA,KACjBqB,KAAKC,SAAS,CACV5B,MAAOiC,M,uBAIf,SAAUzB,EAAMF,GACZ,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACFA,EAAKI,MAAQA,IACb6B,QAAQC,IAAIlC,EAAKI,IAAM,OAASA,GAChCJ,EAAKM,KAAOA,MAGpBmB,KAAKC,SAAS,CACV5B,MAAOA,M,oBAOf,WACI,OACI,qBAAKG,UAAU,MAAf,SACI,mCACI,uBAAME,GAAG,aAAagC,SAAUV,KAAKD,QAArC,UACI,uBAAOtB,KAAK,OAAOkC,YAAY,aAC3B/B,MAAOoB,KAAKL,MAAMC,YAAYf,KAC9BC,SAAUkB,KAAKH,cACnB,wBAAQpB,KAAK,SAAb,oBAEJ,4BAAIuB,KAAKL,MAAMtB,MAAMQ,OACzB,cAAC,EAAD,CAAWR,MAAO2B,KAAKL,MAAMtB,MAAOc,WAAYa,KAAKb,WAC7CH,UAAWgB,KAAKhB,qB,GA5EtB4B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39ae570c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './ListItems.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props) {\r\n    const items = props.items;\r\n    const listItems = items.map(item =>\r\n    {\r\n        return <div className=\"list\" key={item.key}>\r\n            <p>\r\n                <input type=\"text\" id={item.key} value={item.text}\r\n                    onChange={(e) => {\r\n                        props.setUpdate(e.target.value,item.key)\r\n                    }} />\r\n\r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicons\" onClick={() => {\r\n                        props.deleteItem(item.key)\r\n                    }} icon=\"trash\" />\r\n                </span>\r\n            </p>\r\n            </div>\r\n    })\r\n    return <div>\r\n            <FlipMove duration={300} easing='ease-in-out'>\r\n                {listItems}\r\n            </FlipMove>\r\n        </div>;\r\n        \r\n}\r\n\r\nexport default ListItems;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport ListItems from './ListItems';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faTrash);\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            currentItem: {\r\n                text: '',\r\n                key: ''\r\n            }\r\n        }\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.setUpdate = this.setUpdate.bind(this);\r\n    }\r\n    handleInput(e) {\r\n        this.setState({\r\n            currentItem: {\r\n                text: e.target.value,\r\n                key:Date.now()\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem(e) {\r\n        e.preventDefault();\r\n        const newItem = this.state.currentItem;\r\n\r\n        if (newItem.text !== \"\") {\r\n            const items = [...this.state.items, newItem];\r\n            this.setState({\r\n                items: items,\r\n                currentItem: {\r\n                    text:'',\r\n                    key:''\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteItem(key) {\r\n        const filteredItems = this.state.items.filter(item =>\r\n            item.key !== key);\r\n        this.setState({\r\n            items: filteredItems\r\n        })\r\n    }\r\n\r\n    setUpdate(text, key) {\r\n        const items = this.state.items;\r\n        items.map(item => {\r\n            if (item.key === key) {\r\n                console.log(item.key + \"    \" + key)\r\n                item.text = text;\r\n            }\r\n        })\r\n        this.setState({\r\n            items: items\r\n        })\r\n    }\r\n   \r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header>\r\n                    <form id=\"to-do-form\" onSubmit={this.addItem}>\r\n                        <input type=\"text\" placeholder=\"Enter Text\"\r\n                            value={this.state.currentItem.text}\r\n                            onChange={this.handleInput}></input>\r\n                        <button type=\"submit\">Add</button>\r\n                    </form>\r\n                    <p>{this.state.items.text}</p>\r\n                <ListItems items={this.state.items} deleteItem={this.deleteItem}\r\n                        setUpdate={this.setUpdate} />\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}